/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZKCoin, ZKCoinInterface } from "../ZKCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeMul",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "safeSub",
    outputs: [
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060003390506040518060400160405280600681526020017f5a4b436f696e000000000000000000000000000000000000000000000000000081525060029080519060200190620000a4929190620001cf565b506040518060400160405280600381526020017f5a4b43000000000000000000000000000000000000000000000000000000000081525060039080519060200190620000f2929190620001cf565b506002600460006101000a81548160ff021916908360ff160217905550612710600581905550600554600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600554604051620001c0919062000290565b60405180910390a3506200031c565b828054620001dd90620002b7565b90600052602060002090601f0160209004810192826200020157600085556200024d565b82601f106200021c57805160ff19168380011785556200024d565b828001600101855582156200024d579182015b828111156200024c5782518255916020019190600101906200022f565b5b5090506200025c919062000260565b5090565b5b808211156200027b57600081600090555060010162000261565b5090565b6200028a81620002ad565b82525050565b6000602082019050620002a760008301846200027f565b92915050565b6000819050919050565b60006002820490506001821680620002d057607f821691505b60208210811415620002e757620002e6620002ed565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6110d6806200032c6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a293d1e811610097578063d4ee1d9011610066578063d4ee1d90146102ae578063dd62ed3e146102cc578063e6cb9013146102fc578063f2fde38b1461032c576100f5565b8063a293d1e8146101ee578063a9059cbb1461021e578063b5931f7c1461024e578063d05c78da1461027e576100f5565b8063313ce567116100d3578063313ce5671461017857806370a082311461019657806379ba5097146101c65780638da5cb5b146101d0576100f5565b8063095ea7b3146100fa57806318160ddd1461012a57806323b872dd14610148575b600080fd5b610114600480360381019061010f9190610d8a565b610348565b6040516101219190610e59565b60405180910390f35b61013261043a565b60405161013f9190610e74565b60405180910390f35b610162600480360381019061015d9190610d3b565b61048e565b60405161016f9190610e59565b60405180910390f35b61018061071e565b60405161018d9190610e8f565b60405180910390f35b6101b060048036038101906101ab9190610cd6565b610731565b6040516101bd9190610e74565b60405180910390f35b6101ce61077a565b005b6101d8610916565b6040516101e59190610e3e565b60405180910390f35b61020860048036038101906102039190610dc6565b61093a565b6040516102159190610e74565b60405180910390f35b61023860048036038101906102339190610d8a565b61095d565b6040516102459190610e59565b60405180910390f35b61026860048036038101906102639190610dc6565b610ae6565b6040516102759190610e74565b60405180910390f35b61029860048036038101906102939190610dc6565b610b08565b6040516102a59190610e74565b60405180910390f35b6102b6610b40565b6040516102c39190610e3e565b60405180910390f35b6102e660048036038101906102e19190610cff565b610b66565b6040516102f39190610e74565b60405180910390f35b61031660048036038101906103119190610dc6565b610bed565b6040516103239190610e74565b60405180910390f35b61034660048036038101906103419190610cd6565b610c10565b005b600081600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104289190610e74565b60405180910390a36001905092915050565b6000600660008073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546005546104899190610f8b565b905090565b60006104d9600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361093a565b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506105a2600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361093a565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061066b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610bed565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070b9190610e74565b60405180910390a3600190509392505050565b600460009054906101000a900460ff1681565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d457600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008282111561094957600080fd5b81836109559190610f8b565b905092915050565b60006109a8600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361093a565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a34600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483610bed565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ad49190610e74565b60405180910390a36001905092915050565b6000808211610af457600080fd5b8183610b009190610f00565b905092915050565b60008183610b169190610f31565b90506000831480610b315750818382610b2f9190610f00565b145b610b3a57600080fd5b92915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008183610bfb9190610eaa565b905082811015610c0a57600080fd5b92915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c6857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600081359050610cbb81611072565b92915050565b600081359050610cd081611089565b92915050565b600060208284031215610ce857600080fd5b6000610cf684828501610cac565b91505092915050565b60008060408385031215610d1257600080fd5b6000610d2085828601610cac565b9250506020610d3185828601610cac565b9150509250929050565b600080600060608486031215610d5057600080fd5b6000610d5e86828701610cac565b9350506020610d6f86828701610cac565b9250506040610d8086828701610cc1565b9150509250925092565b60008060408385031215610d9d57600080fd5b6000610dab85828601610cac565b9250506020610dbc85828601610cc1565b9150509250929050565b60008060408385031215610dd957600080fd5b6000610de785828601610cc1565b9250506020610df885828601610cc1565b9150509250929050565b610e0b81610fbf565b82525050565b610e1a81610fd1565b82525050565b610e2981610ffd565b82525050565b610e3881611007565b82525050565b6000602082019050610e536000830184610e02565b92915050565b6000602082019050610e6e6000830184610e11565b92915050565b6000602082019050610e896000830184610e20565b92915050565b6000602082019050610ea46000830184610e2f565b92915050565b6000610eb582610ffd565b9150610ec083610ffd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ef557610ef4611014565b5b828201905092915050565b6000610f0b82610ffd565b9150610f1683610ffd565b925082610f2657610f25611043565b5b828204905092915050565b6000610f3c82610ffd565b9150610f4783610ffd565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f8057610f7f611014565b5b828202905092915050565b6000610f9682610ffd565b9150610fa183610ffd565b925082821015610fb457610fb3611014565b5b828203905092915050565b6000610fca82610fdd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b61107b81610fbf565b811461108657600080fd5b50565b61109281610ffd565b811461109d57600080fd5b5056fea2646970667358221220ac1ce1c9a45ecad2d219db91579115be378cc54f4bf8147aa8e514652d82938964736f6c63430008040033";

type ZKCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKCoin__factory extends ContractFactory {
  constructor(...args: ZKCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ZKCoin";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZKCoin> {
    return super.deploy(overrides || {}) as Promise<ZKCoin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZKCoin {
    return super.attach(address) as ZKCoin;
  }
  connect(signer: Signer): ZKCoin__factory {
    return super.connect(signer) as ZKCoin__factory;
  }
  static readonly contractName: "ZKCoin";
  public readonly contractName: "ZKCoin";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKCoinInterface {
    return new utils.Interface(_abi) as ZKCoinInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZKCoin {
    return new Contract(address, _abi, signerOrProvider) as ZKCoin;
  }
}
